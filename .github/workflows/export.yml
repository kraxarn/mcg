name: Export

on: workflow_dispatch

env:
  GODOT_VERSION: 3.4

jobs:
  export:
    strategy:
      fail-fast: false
      matrix: 
        name: [Linux, Windows, macOS, Android, HTML5]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Engine
        id: cache-engine
        uses: actions/cache@v2
        with:
          path: godot.zip
          key: godot-v${{env.GODOT_VERSION}}-${{runner.os}}

      - name: Download Engine
        if: steps.cache-engine.outputs.cache-hit != 'true'
        run: curl -L https://github.com/godotengine/godot/releases/download/$GODOT_VERSION-stable/Godot_v$GODOT_VERSION-stable_mono_linux_headless_64.zip -o godot.zip

      - name: Install Engine
        run: |
          unzip godot.zip
          ln -s ./Godot_v$GODOT_VERSION-stable_mono_linux_headless_64/Godot_v$GODOT_VERSION-stable_mono_linux_headless.64 ./godot

      - name: Cache Export Templates
        id: cache-templates
        uses: actions/cache@v2
        with:
          path: templates.zip
          key: templates-v${{env.GODOT_VERSION}}-${{runner.os}}

      - name: Download Export Templates
        if: steps.cache-templates.outputs.cache-hit != 'true'
        run: curl -L https://github.com/godotengine/godot/releases/download/$GODOT_VERSION-stable/Godot_v$GODOT_VERSION-stable_mono_export_templates.tpz -o templates.zip

      - name: Install Export Templates
        run: |
          unzip templates.zip
          TEMPLATES_VERSION="$(cat ./templates/version.txt)"
          TEMPLATES_DIR="$HOME/.local/share/godot/templates"
          mkdir -p "$TEMPLATES_DIR"
          mv "./templates" "$TEMPLATES_DIR/$TEMPLATES_VERSION"
      
      - name: Prepare Android Keystore
        if: matrix.name == 'Android'
        run: |
          CONFIG_PATH="$HOME/.config/godot"
          CONFIG_FILE="$CONFIG_PATH/editor_settings-3.tres"
          KEYSTORE_FILE="$CONFIG_PATH/keystore.jks"
          mkdir -p "$CONFIG_PATH"
          echo "[gd_resource type=\"EditorSettings\" format=2]\n" >> $CONFIG_FILE
          echo "[resource]" >> $CONFIG_FILE
          echo "export/android/android_sdk_path = \"/usr/local/lib/android/sdk\"" >> $CONFIG_FILE
          echo "export/android/debug_keystore = \"$KEYSTORE_FILE\"" >> $CONFIG_FILE
          echo "export/android/debug_keystore_user = \"$ALIAS\"" >> $CONFIG_FILE
          echo "export/android/debug_keystore_pass = \"$PASSWORD\"\n" >> $CONFIG_FILE
          echo -n "$KEYSTORE" | base64 -d > "$KEYSTORE_FILE"

      - name: Export Project
        env: 
          NAME: ${{matrix.name}}
        run: |
          mkdir -p "${{runner.workspace}}/mcg/Export/$NAME"
          # C# signals can sometimes leak, resulting in result 1 being returned, failing the action
          # More info: https://github.com/godotengine/godot/issues/39577
          # It's planned to be fixed in 4.0, so for now, this workaround is required
          ./godot --verbose --path "${{runner.workspace}}/mcg" --export "$NAME" || true

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mcg-${{matrix.name}}
          path: ${{runner.workspace}}/mcg/Export/${{matrix.name}}
          if-no-files-found: error
