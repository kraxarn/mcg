import{S as v,i as b,s as w,w as f,k as j,x as m,m as x,y as u,g as i,q as p,o as h,B as _,d as c,$ as B,a0 as K,t as C,e as $,h as P,c as g,K as q,a as D,a1 as E}from"../../chunks/vendor-14bb756e.js";import{B as N}from"../../chunks/Banner-93f1a8ae.js";import{P as R}from"../../chunks/Panel-f82ee498.js";function d(o,a,r){const t=o.slice();return t[3]=a[r],t}function y(o){let a=o[3]+"",r,t;return{c(){r=C(a),t=$("br")},l(e){r=P(e,a),t=g(e,"BR",{})},m(e,s){i(e,r,s),i(e,t,s)},p:q,d(e){e&&c(r),e&&c(t)}}}function S(o){let a,r=o[0],t=[];for(let e=0;e<r.length;e+=1)t[e]=y(d(o,r,e));return{c(){a=$("pre");for(let e=0;e<t.length;e+=1)t[e].c()},l(e){a=g(e,"PRE",{});var s=D(a);for(let n=0;n<t.length;n+=1)t[n].l(s);s.forEach(c)},m(e,s){i(e,a,s);for(let n=0;n<t.length;n+=1)t[n].m(a,null)},p(e,s){if(s&1){r=e[0];let n;for(n=0;n<r.length;n+=1){const l=d(e,r,n);t[n]?t[n].p(l,s):(t[n]=y(l),t[n].c(),t[n].m(a,null))}for(;n<t.length;n+=1)t[n].d(1);t.length=r.length}},d(e){e&&c(a),E(t,e)}}}function z(o){let a,r,t,e;return a=new N({props:{title:"Nakama"}}),t=new R({props:{$$slots:{default:[S]},$$scope:{ctx:o}}}),{c(){f(a.$$.fragment),r=j(),f(t.$$.fragment)},l(s){m(a.$$.fragment,s),r=x(s),m(t.$$.fragment,s)},m(s,n){u(a,s,n),i(s,r,n),u(t,s,n),e=!0},p(s,[n]){const l={};n&64&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){e||(p(a.$$.fragment,s),p(t.$$.fragment,s),e=!0)},o(s){h(a.$$.fragment,s),h(t.$$.fragment,s),e=!1},d(s){_(a,s),s&&c(r),_(t,s)}}}const I=async({fetch:o})=>({props:await(await o("/nakama/client")).json()});function A(o,a,r){let{serverKey:t}=a,{host:e}=a,s=[`Connecting to ${e}...`];return(async()=>{try{const n=B(t,e).decrypted,k=await new K(n,e).authenticateDevice("00000000-0000-0000-0000-000000000000",!1);s.push(`Connected: ${k.token}`)}catch(n){s.push(`${n.name}: ${n.message}`)}})().then(()=>s.push("Done")),o.$$set=n=>{"serverKey"in n&&r(1,t=n.serverKey),"host"in n&&r(2,e=n.host)},[s,t,e]}class J extends v{constructor(a){super();b(this,a,A,z,w,{serverKey:1,host:2})}}export{J as default,I as load};
